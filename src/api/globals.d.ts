/* tslint:disable */
/* eslint-disable */
/**
 * TechCenter.Api | v1 - version 1.0.0
 *
 *
 *
 * OpenAPI version: 3.0.1
 *
 *
 * NOTE: This file is auto generated by the alova's vscode plugin.
 *
 * https://alova.js.org/devtools/vscode
 *
 * **Do not edit the file manually.**
 */
import type { Alova, AlovaMethodCreateConfig, AlovaGenerics, Method } from 'alova'
import type { $$userConfigMap, alovaInstance } from './index'
import type apiDefinitions from './apiDefinitions'

type CollapsedAlova = typeof alovaInstance
type UserMethodConfigMap = typeof $$userConfigMap

type Alova2MethodConfig<Responded> =
  CollapsedAlova extends Alova<
    AlovaGenerics<
      any,
      any,
      infer RequestConfig,
      infer Response,
      infer ResponseHeader,
      infer L1Cache,
      infer L2Cache,
      infer SE
    >
  >
    ? Omit<
        AlovaMethodCreateConfig<
          AlovaGenerics<
            Responded,
            any,
            RequestConfig,
            Response,
            ResponseHeader,
            L1Cache,
            L2Cache,
            SE
          >,
          any,
          Responded
        >,
        'params'
      >
    : never

// Extract the return type of transform function that define in $$userConfigMap, if it not exists, use the default type.
type ExtractUserDefinedTransformed<
  DefinitionKey extends keyof typeof apiDefinitions,
  Default
> = DefinitionKey extends keyof UserMethodConfigMap
  ? UserMethodConfigMap[DefinitionKey]['transform'] extends (...args: any[]) => any
    ? Awaited<ReturnType<UserMethodConfigMap[DefinitionKey]['transform']>>
    : Default
  : Default
type Alova2Method<
  Responded,
  DefinitionKey extends keyof typeof apiDefinitions,
  CurrentConfig extends Alova2MethodConfig<any>
> =
  CollapsedAlova extends Alova<
    AlovaGenerics<
      any,
      any,
      infer RequestConfig,
      infer Response,
      infer ResponseHeader,
      infer L1Cache,
      infer L2Cache,
      infer SE
    >
  >
    ? Method<
        AlovaGenerics<
          CurrentConfig extends undefined
            ? ExtractUserDefinedTransformed<DefinitionKey, Responded>
            : CurrentConfig['transform'] extends (...args: any[]) => any
              ? Awaited<ReturnType<CurrentConfig['transform']>>
              : ExtractUserDefinedTransformed<DefinitionKey, Responded>,
          any,
          RequestConfig,
          Response,
          ResponseHeader,
          L1Cache,
          L2Cache,
          SE
        >
      >
    : never

export interface RegisterRequest {
  name: string
  email: string
  password: string
}
export interface LoginRequest {
  email: string
  password: string
}
export interface RefreshTokenRequest {
  refreshToken: string
}
export interface LogoutRequest {
  userId: number
  refreshToken: string | null
}
export type NullableOfStatus = number | null
export interface QueryContentsForManageRequest {
  limit: number
  offset: number
  keyword: string | null
  status: NullableOfStatus
}
export interface QueryContentsForViewerRequest {
  limit: number
  offset: number
  keyword: string | null
}
export interface GetPostByIdRequest {
  id?: number
}
export interface GetVideoByIdRequest {
  id?: number
}
export type Type = number
export interface ContentTypeAndId {
  type?: number
  id?: number
}
export type FileResourceDto = {
  id?: number
  fileName?: string
  storageKey?: string
  ownerId?: number
  contents?: ContentTypeAndId[]
  providerId?: number
  size?: number
} | null
export interface IdAndNameDto {
  id: number
  name: string
}
export interface PostForEditDto {
  content?: string
  id?: number
  title?: string
  cover?: FileResourceDto
  summary?: string
  authors?: IdAndNameDto[]
  categories?: null[]
  tags?: null[]
  timeWillUsed?: number
}
export interface FileResourceDto2 {
  id?: number
  fileName?: string
  storageKey?: string
  ownerId?: number
  contents?: ContentTypeAndId[]
  providerId?: number
  size?: number
}
export interface VideoForEditDto {
  videoFile?: FileResourceDto2
  id?: number
  title?: string
  cover?: FileResourceDto
  summary?: string
  authors?: IdAndNameDto[]
  categories?: null[]
  tags?: null[]
  timeWillUsed?: number
}
export interface DeletePostByIdRequest {
  id?: number
}
export interface DeleteVideoByIdRequest {
  id?: number
}
export type IFormFile = Blob
export type BasicUserInfoDto = {
  id?: number
  name?: string
  nickName?: string
  email?: string
  roles?: string[]
} | null
export interface ApiResultOfBasicUserInfoDto {
  code?: number
  message: string
  data?: BasicUserInfoDto
}
export interface ApiResultOfObject {
  code?: number
  message: string
  data?: null
}
export type LoginResponse = {
  accessToken: string
  refreshToken: string
} | null
export interface ApiResultOfLoginResponse {
  code?: number
  message: string
  data?: LoginResponse
}
export type RefreshTokenResponse = {
  accessToken: string
  refreshToken: string
} | null
export interface ApiResultOfRefreshTokenResponse {
  code?: number
  message: string
  data?: RefreshTokenResponse
}
export type Status = number
export interface EventDto {
  contentType?: number
  eventType?: string
  actor?: IdAndNameDto
  title?: string
  message?: string
  id?: number
  createdAt?: string
  updatedAt?: string
}
export interface PostForManageDto {
  content?: string
  title?: string
  cover?: FileResourceDto
  summary?: string
  authors?: IdAndNameDto[]
  categories?: null[]
  tags?: null[]
  status?: Status
  viewCount?: number
  events?: EventDto[]
  timeWillUsed?: number
  id?: number
  createdAt?: string
  updatedAt?: string
}
export interface Api_result_of_post_for_manage_dto {
  code?: number
  message: string
  data?: PostForManageDto[] | null
}
export interface VideoForManageDto {
  videoFile?: FileResourceDto
  title?: string
  cover?: FileResourceDto
  summary?: string
  authors?: IdAndNameDto[]
  categories?: null[]
  tags?: null[]
  status?: Status
  viewCount?: number
  events?: EventDto[]
  timeWillUsed?: number
  id?: number
  createdAt?: string
  updatedAt?: string
}
export interface Api_result_of_video_for_manage_dto {
  code?: number
  message: string
  data?: VideoForManageDto[] | null
}
export type PostForManageDto2 = {
  content?: string
  title?: string
  cover?: FileResourceDto
  summary?: string
  authors?: IdAndNameDto[]
  categories?: null[]
  tags?: null[]
  status?: Status
  viewCount?: number
  events?: EventDto[]
  timeWillUsed?: number
  id?: number
  createdAt?: string
  updatedAt?: string
} | null
export interface ApiResultOfPostForManageDto {
  code?: number
  message: string
  data?: PostForManageDto2
}
export type VideoForManageDto2 = {
  videoFile?: FileResourceDto
  title?: string
  cover?: FileResourceDto
  summary?: string
  authors?: IdAndNameDto[]
  categories?: null[]
  tags?: null[]
  status?: Status
  viewCount?: number
  events?: EventDto[]
  timeWillUsed?: number
  id?: number
  createdAt?: string
  updatedAt?: string
} | null
export interface ApiResultOfVideoForManageDto {
  code?: number
  message: string
  data?: VideoForManageDto2
}
export interface PostForViewerDto {
  content?: string
  title?: string
  cover?: string | null
  summary?: string
  authors?: IdAndNameDto[]
  categories?: null[]
  tags?: null[]
  viewCount?: number
  timeWillUsed?: number
  id?: number
  createdAt?: string
  updatedAt?: string
}
export interface Api_result_of_post_for_viewer_dto {
  code?: number
  message: string
  data?: PostForViewerDto[] | null
}
export interface VideoForViewerDto {
  videoFile?: FileResourceDto2
  title?: string
  cover?: string | null
  summary?: string
  authors?: IdAndNameDto[]
  categories?: null[]
  tags?: null[]
  viewCount?: number
  timeWillUsed?: number
  id?: number
  createdAt?: string
  updatedAt?: string
}
export interface Api_result_of_video_for_viewer_dto {
  code?: number
  message: string
  data?: VideoForViewerDto[] | null
}
export interface ApiResultOfFileResourceDto {
  code?: number
  message: string
  data?: FileResourceDto
}
declare global {
  interface Apis {
    Auth: {
      /**
       * ---
       *
       * [POST] 注册
       *
       * **path:** /api/auth/register
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = {
       *   name: string
       *   email: string
       *   password: string
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   code?: number
       *   message: string
       *   data?: null
       * }
       * ```
       */
      Register<
        Config extends Alova2MethodConfig<ApiResultOfObject> & {
          data: RegisterRequest
        }
      >(
        config: Config
      ): Alova2Method<ApiResultOfObject, 'Auth.Register', Config>
      /**
       * ---
       *
       * [POST] 登录
       *
       * **path:** /api/auth/login
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = {
       *   email: string
       *   password: string
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   code?: number
       *   message: string
       *   data?: {
       *     accessToken: string
       *     refreshToken: string
       *   } | null
       * }
       * ```
       */
      Login<
        Config extends Alova2MethodConfig<ApiResultOfLoginResponse> & {
          data: LoginRequest
        }
      >(
        config: Config
      ): Alova2Method<ApiResultOfLoginResponse, 'Auth.Login', Config>
      /**
       * ---
       *
       * [POST] 刷新令牌
       *
       * **path:** /api/auth/refresh
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = {
       *   refreshToken: string
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   code?: number
       *   message: string
       *   data?: {
       *     accessToken: string
       *     refreshToken: string
       *   } | null
       * }
       * ```
       */
      RefreshToken<
        Config extends Alova2MethodConfig<ApiResultOfRefreshTokenResponse> & {
          data: RefreshTokenRequest
        }
      >(
        config: Config
      ): Alova2Method<ApiResultOfRefreshTokenResponse, 'Auth.RefreshToken', Config>
      /**
       * ---
       *
       * [POST] 登出
       *
       * **path:** /api/auth/logout
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = {
       *   userId: number
       *   refreshToken: string | null
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   code?: number
       *   message: string
       *   data?: null
       * }
       * ```
       */
      Logout<
        Config extends Alova2MethodConfig<ApiResultOfObject> & {
          data: LogoutRequest
        }
      >(
        config: Config
      ): Alova2Method<ApiResultOfObject, 'Auth.Logout', Config>
    }
    User: {
      /**
       * ---
       *
       * [POST] 获取用户基本信息
       *
       * **path:** /api/user/basicInfo
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   code?: number
       *   message: string
       *   data?: {
       *     id?: number
       *     name?: string
       *     nickName?: string
       *     email?: string
       *     // [items] start
       *     // [items] end
       *     roles?: string[]
       *   } | null
       * }
       * ```
       */
      GetUserBasicInfo<Config extends Alova2MethodConfig<ApiResultOfBasicUserInfoDto>>(
        config?: Config
      ): Alova2Method<ApiResultOfBasicUserInfoDto, 'User.GetUserBasicInfo', Config>
    }
    Content: {
      /**
       * ---
       *
       * [POST] 查询本账号的文章
       *
       * **path:** /api/content/posts/queryForManage
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = {
       *   limit: number
       *   offset: number
       *   keyword: string | null
       *   status: number | null
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   code?: number
       *   message: string
       *   // [params1] start
       *   // [items] start
       *   // [items] end
       *   // [params1] end
       *   data?: Array<{
       *     content?: string
       *     title?: string
       *     cover?: {
       *       id?: number
       *       fileName?: string
       *       storageKey?: string
       *       ownerId?: number
       *       // [items] start
       *       // [items] end
       *       contents?: Array<{
       *         type?: number
       *         id?: number
       *       }>
       *       providerId?: number
       *       size?: number
       *     } | null
       *     summary?: string
       *     // [items] start
       *     // [items] end
       *     authors?: Array<{
       *       id: number
       *       name: string
       *     }>
       *     // [items] start
       *     // [items] end
       *     categories?: null[]
       *     // [items] start
       *     // [items] end
       *     tags?: null[]
       *     status?: number
       *     viewCount?: number
       *     // [items] start
       *     // [items] end
       *     events?: Array<{
       *       contentType?: number
       *       eventType?: string
       *       actor?: {
       *         id: number
       *         name: string
       *       }
       *       title?: string
       *       message?: string
       *       id?: number
       *       createdAt?: string
       *       updatedAt?: string
       *     }>
       *     timeWillUsed?: number
       *     id?: number
       *     createdAt?: string
       *     updatedAt?: string
       *   }> | null
       * }
       * ```
       */
      QueryPostsForManage<
        Config extends Alova2MethodConfig<Api_result_of_post_for_manage_dto> & {
          data: QueryContentsForManageRequest
        }
      >(
        config: Config
      ): Alova2Method<Api_result_of_post_for_manage_dto, 'Content.QueryPostsForManage', Config>
      /**
       * ---
       *
       * [POST] 查询本账号的视频
       *
       * **path:** /api/content/videos/queryForManage
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = {
       *   limit: number
       *   offset: number
       *   keyword: string | null
       *   status: number | null
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   code?: number
       *   message: string
       *   // [params1] start
       *   // [items] start
       *   // [items] end
       *   // [params1] end
       *   data?: Array<{
       *     videoFile?: {
       *       id?: number
       *       fileName?: string
       *       storageKey?: string
       *       ownerId?: number
       *       // [items] start
       *       // [items] end
       *       contents?: Array<{
       *         type?: number
       *         id?: number
       *       }>
       *       providerId?: number
       *       size?: number
       *     } | null
       *     title?: string
       *     cover?: {
       *       id?: number
       *       fileName?: string
       *       storageKey?: string
       *       ownerId?: number
       *       // [items] start
       *       // [items] end
       *       contents?: Array<{
       *         type?: number
       *         id?: number
       *       }>
       *       providerId?: number
       *       size?: number
       *     } | null
       *     summary?: string
       *     // [items] start
       *     // [items] end
       *     authors?: Array<{
       *       id: number
       *       name: string
       *     }>
       *     // [items] start
       *     // [items] end
       *     categories?: null[]
       *     // [items] start
       *     // [items] end
       *     tags?: null[]
       *     status?: number
       *     viewCount?: number
       *     // [items] start
       *     // [items] end
       *     events?: Array<{
       *       contentType?: number
       *       eventType?: string
       *       actor?: {
       *         id: number
       *         name: string
       *       }
       *       title?: string
       *       message?: string
       *       id?: number
       *       createdAt?: string
       *       updatedAt?: string
       *     }>
       *     timeWillUsed?: number
       *     id?: number
       *     createdAt?: string
       *     updatedAt?: string
       *   }> | null
       * }
       * ```
       */
      QueryVideosForManage<
        Config extends Alova2MethodConfig<Api_result_of_video_for_manage_dto> & {
          data: QueryContentsForManageRequest
        }
      >(
        config: Config
      ): Alova2Method<Api_result_of_video_for_manage_dto, 'Content.QueryVideosForManage', Config>
      /**
       * ---
       *
       * [POST] 获取文章内部详情
       *
       * **path:** /api/content/posts/getByIdForManage
       *
       * ---
       *
       * **Query Parameters**
       * ```ts
       * type QueryParameters = {
       *   postId: number
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   code?: number
       *   message: string
       *   data?: {
       *     content?: string
       *     title?: string
       *     cover?: {
       *       id?: number
       *       fileName?: string
       *       storageKey?: string
       *       ownerId?: number
       *       // [items] start
       *       // [items] end
       *       contents?: Array<{
       *         type?: number
       *         id?: number
       *       }>
       *       providerId?: number
       *       size?: number
       *     } | null
       *     summary?: string
       *     // [items] start
       *     // [items] end
       *     authors?: Array<{
       *       id: number
       *       name: string
       *     }>
       *     // [items] start
       *     // [items] end
       *     categories?: null[]
       *     // [items] start
       *     // [items] end
       *     tags?: null[]
       *     status?: number
       *     viewCount?: number
       *     // [items] start
       *     // [items] end
       *     events?: Array<{
       *       contentType?: number
       *       eventType?: string
       *       actor?: {
       *         id: number
       *         name: string
       *       }
       *       title?: string
       *       message?: string
       *       id?: number
       *       createdAt?: string
       *       updatedAt?: string
       *     }>
       *     timeWillUsed?: number
       *     id?: number
       *     createdAt?: string
       *     updatedAt?: string
       *   } | null
       * }
       * ```
       */
      GetPostByIdForManage<
        Config extends Alova2MethodConfig<ApiResultOfPostForManageDto> & {
          params: {
            postId: number
          }
        }
      >(
        config: Config
      ): Alova2Method<ApiResultOfPostForManageDto, 'Content.GetPostByIdForManage', Config>
      /**
       * ---
       *
       * [POST] 获取视频内部详情
       *
       * **path:** /api/content/videos/getByIdForManage
       *
       * ---
       *
       * **Query Parameters**
       * ```ts
       * type QueryParameters = {
       *   videoId: number
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   code?: number
       *   message: string
       *   data?: {
       *     videoFile?: {
       *       id?: number
       *       fileName?: string
       *       storageKey?: string
       *       ownerId?: number
       *       // [items] start
       *       // [items] end
       *       contents?: Array<{
       *         type?: number
       *         id?: number
       *       }>
       *       providerId?: number
       *       size?: number
       *     } | null
       *     title?: string
       *     cover?: {
       *       id?: number
       *       fileName?: string
       *       storageKey?: string
       *       ownerId?: number
       *       // [items] start
       *       // [items] end
       *       contents?: Array<{
       *         type?: number
       *         id?: number
       *       }>
       *       providerId?: number
       *       size?: number
       *     } | null
       *     summary?: string
       *     // [items] start
       *     // [items] end
       *     authors?: Array<{
       *       id: number
       *       name: string
       *     }>
       *     // [items] start
       *     // [items] end
       *     categories?: null[]
       *     // [items] start
       *     // [items] end
       *     tags?: null[]
       *     status?: number
       *     viewCount?: number
       *     // [items] start
       *     // [items] end
       *     events?: Array<{
       *       contentType?: number
       *       eventType?: string
       *       actor?: {
       *         id: number
       *         name: string
       *       }
       *       title?: string
       *       message?: string
       *       id?: number
       *       createdAt?: string
       *       updatedAt?: string
       *     }>
       *     timeWillUsed?: number
       *     id?: number
       *     createdAt?: string
       *     updatedAt?: string
       *   } | null
       * }
       * ```
       */
      GetVideoByIdForManage<
        Config extends Alova2MethodConfig<ApiResultOfVideoForManageDto> & {
          params: {
            videoId: number
          }
        }
      >(
        config: Config
      ): Alova2Method<ApiResultOfVideoForManageDto, 'Content.GetVideoByIdForManage', Config>
      /**
       * ---
       *
       * [POST] 查询文章
       *
       * **path:** /api/content/posts/queryForViewer
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = {
       *   limit: number
       *   offset: number
       *   keyword: string | null
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   code?: number
       *   message: string
       *   // [params1] start
       *   // [items] start
       *   // [items] end
       *   // [params1] end
       *   data?: Array<{
       *     content?: string
       *     title?: string
       *     cover?: string | null
       *     summary?: string
       *     // [items] start
       *     // [items] end
       *     authors?: Array<{
       *       id: number
       *       name: string
       *     }>
       *     // [items] start
       *     // [items] end
       *     categories?: null[]
       *     // [items] start
       *     // [items] end
       *     tags?: null[]
       *     viewCount?: number
       *     timeWillUsed?: number
       *     id?: number
       *     createdAt?: string
       *     updatedAt?: string
       *   }> | null
       * }
       * ```
       */
      QueryPostsForViewer<
        Config extends Alova2MethodConfig<Api_result_of_post_for_viewer_dto> & {
          data: QueryContentsForViewerRequest
        }
      >(
        config: Config
      ): Alova2Method<Api_result_of_post_for_viewer_dto, 'Content.QueryPostsForViewer', Config>
      /**
       * ---
       *
       * [POST] 查询视频
       *
       * **path:** /api/content/videos/queryForViewer
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = {
       *   limit: number
       *   offset: number
       *   keyword: string | null
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   code?: number
       *   message: string
       *   // [params1] start
       *   // [items] start
       *   // [items] end
       *   // [params1] end
       *   data?: Array<{
       *     videoFile?: {
       *       id?: number
       *       fileName?: string
       *       storageKey?: string
       *       ownerId?: number
       *       // [items] start
       *       // [items] end
       *       contents?: Array<{
       *         type?: number
       *         id?: number
       *       }>
       *       providerId?: number
       *       size?: number
       *     }
       *     title?: string
       *     cover?: string | null
       *     summary?: string
       *     // [items] start
       *     // [items] end
       *     authors?: Array<{
       *       id: number
       *       name: string
       *     }>
       *     // [items] start
       *     // [items] end
       *     categories?: null[]
       *     // [items] start
       *     // [items] end
       *     tags?: null[]
       *     viewCount?: number
       *     timeWillUsed?: number
       *     id?: number
       *     createdAt?: string
       *     updatedAt?: string
       *   }> | null
       * }
       * ```
       */
      QueryVideosForViewer<
        Config extends Alova2MethodConfig<Api_result_of_video_for_viewer_dto> & {
          data: QueryContentsForViewerRequest
        }
      >(
        config: Config
      ): Alova2Method<Api_result_of_video_for_viewer_dto, 'Content.QueryVideosForViewer', Config>
      /**
       * ---
       *
       * [POST] 通过ID获取文章
       *
       * **path:** /api/content/posts/getById
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = {
       *   id?: number
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = null
       * ```
       */
      GetPostById<
        Config extends Alova2MethodConfig<null> & {
          data: GetPostByIdRequest
        }
      >(
        config: Config
      ): Alova2Method<null, 'Content.GetPostById', Config>
      /**
       * ---
       *
       * [POST] 通过ID获取视频
       *
       * **path:** /api/content/videos/getById
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = {
       *   id?: number
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = null
       * ```
       */
      GetVideoById<
        Config extends Alova2MethodConfig<null> & {
          data: GetVideoByIdRequest
        }
      >(
        config: Config
      ): Alova2Method<null, 'Content.GetVideoById', Config>
      /**
       * ---
       *
       * [POST]
       *
       * **path:** /api/content/posts/add
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = {
       *   content?: string
       *   id?: number
       *   title?: string
       *   cover?: {
       *     id?: number
       *     fileName?: string
       *     storageKey?: string
       *     ownerId?: number
       *     // [items] start
       *     // [items] end
       *     contents?: Array<{
       *       type?: number
       *       id?: number
       *     }>
       *     providerId?: number
       *     size?: number
       *   } | null
       *   summary?: string
       *   // [items] start
       *   // [items] end
       *   authors?: Array<{
       *     id: number
       *     name: string
       *   }>
       *   // [items] start
       *   // [items] end
       *   categories?: null[]
       *   // [items] start
       *   // [items] end
       *   tags?: null[]
       *   timeWillUsed?: number
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = null
       * ```
       */
      post_api_content_posts_add<
        Config extends Alova2MethodConfig<null> & {
          data: PostForEditDto
        }
      >(
        config: Config
      ): Alova2Method<null, 'Content.post_api_content_posts_add', Config>
      /**
       * ---
       *
       * [POST]
       *
       * **path:** /api/content/videos/add
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = {
       *   videoFile?: {
       *     id?: number
       *     fileName?: string
       *     storageKey?: string
       *     ownerId?: number
       *     // [items] start
       *     // [items] end
       *     contents?: Array<{
       *       type?: number
       *       id?: number
       *     }>
       *     providerId?: number
       *     size?: number
       *   }
       *   id?: number
       *   title?: string
       *   cover?: {
       *     id?: number
       *     fileName?: string
       *     storageKey?: string
       *     ownerId?: number
       *     // [items] start
       *     // [items] end
       *     contents?: Array<{
       *       type?: number
       *       id?: number
       *     }>
       *     providerId?: number
       *     size?: number
       *   } | null
       *   summary?: string
       *   // [items] start
       *   // [items] end
       *   authors?: Array<{
       *     id: number
       *     name: string
       *   }>
       *   // [items] start
       *   // [items] end
       *   categories?: null[]
       *   // [items] start
       *   // [items] end
       *   tags?: null[]
       *   timeWillUsed?: number
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = null
       * ```
       */
      post_api_content_videos_add<
        Config extends Alova2MethodConfig<null> & {
          data: VideoForEditDto
        }
      >(
        config: Config
      ): Alova2Method<null, 'Content.post_api_content_videos_add', Config>
      /**
       * ---
       *
       * [POST]
       *
       * **path:** /api/content/posts/update
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = {
       *   content?: string
       *   id?: number
       *   title?: string
       *   cover?: {
       *     id?: number
       *     fileName?: string
       *     storageKey?: string
       *     ownerId?: number
       *     // [items] start
       *     // [items] end
       *     contents?: Array<{
       *       type?: number
       *       id?: number
       *     }>
       *     providerId?: number
       *     size?: number
       *   } | null
       *   summary?: string
       *   // [items] start
       *   // [items] end
       *   authors?: Array<{
       *     id: number
       *     name: string
       *   }>
       *   // [items] start
       *   // [items] end
       *   categories?: null[]
       *   // [items] start
       *   // [items] end
       *   tags?: null[]
       *   timeWillUsed?: number
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = null
       * ```
       */
      post_api_content_posts_update<
        Config extends Alova2MethodConfig<null> & {
          data: PostForEditDto
        }
      >(
        config: Config
      ): Alova2Method<null, 'Content.post_api_content_posts_update', Config>
      /**
       * ---
       *
       * [POST]
       *
       * **path:** /api/content/videos/update
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = {
       *   videoFile?: {
       *     id?: number
       *     fileName?: string
       *     storageKey?: string
       *     ownerId?: number
       *     // [items] start
       *     // [items] end
       *     contents?: Array<{
       *       type?: number
       *       id?: number
       *     }>
       *     providerId?: number
       *     size?: number
       *   }
       *   id?: number
       *   title?: string
       *   cover?: {
       *     id?: number
       *     fileName?: string
       *     storageKey?: string
       *     ownerId?: number
       *     // [items] start
       *     // [items] end
       *     contents?: Array<{
       *       type?: number
       *       id?: number
       *     }>
       *     providerId?: number
       *     size?: number
       *   } | null
       *   summary?: string
       *   // [items] start
       *   // [items] end
       *   authors?: Array<{
       *     id: number
       *     name: string
       *   }>
       *   // [items] start
       *   // [items] end
       *   categories?: null[]
       *   // [items] start
       *   // [items] end
       *   tags?: null[]
       *   timeWillUsed?: number
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = null
       * ```
       */
      post_api_content_videos_update<
        Config extends Alova2MethodConfig<null> & {
          data: VideoForEditDto
        }
      >(
        config: Config
      ): Alova2Method<null, 'Content.post_api_content_videos_update', Config>
      /**
       * ---
       *
       * [POST]
       *
       * **path:** /api/content/posts/delete
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = {
       *   id?: number
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = null
       * ```
       */
      post_api_content_posts_delete<
        Config extends Alova2MethodConfig<null> & {
          data: DeletePostByIdRequest
        }
      >(
        config: Config
      ): Alova2Method<null, 'Content.post_api_content_posts_delete', Config>
      /**
       * ---
       *
       * [POST]
       *
       * **path:** /api/content/videos/delete
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = {
       *   id?: number
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = null
       * ```
       */
      post_api_content_videos_delete<
        Config extends Alova2MethodConfig<null> & {
          data: DeleteVideoByIdRequest
        }
      >(
        config: Config
      ): Alova2Method<null, 'Content.post_api_content_videos_delete', Config>
    }
    BuiltinStorageProvider: {
      /**
       * ---
       *
       * [POST] 上传文件至内置存储提供商
       *
       * **path:** /api/builtinStorageProvider/upload
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = {
       *   file: Blob
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   code?: number
       *   message: string
       *   data?: {
       *     id?: number
       *     fileName?: string
       *     storageKey?: string
       *     ownerId?: number
       *     // [items] start
       *     // [items] end
       *     contents?: Array<{
       *       type?: number
       *       id?: number
       *     }>
       *     providerId?: number
       *     size?: number
       *   } | null
       * }
       * ```
       */
      UploadFile<
        Config extends Alova2MethodConfig<ApiResultOfFileResourceDto> & {
          data: {
            file: IFormFile
          }
        }
      >(
        config: Config
      ): Alova2Method<ApiResultOfFileResourceDto, 'BuiltinStorageProvider.UploadFile', Config>
    }
    techCenterApi: {
      /**
       * ---
       *
       * [GET]
       *
       * **path:** /
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = null
       * ```
       */
      get<Config extends Alova2MethodConfig<null>>(
        config?: Config
      ): Alova2Method<null, 'techCenterApi.get', Config>
    }
  }

  var Apis: Apis
}
